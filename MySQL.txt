Q(1):
CREATE TABLE countries(COUNTRY_ID varchar(4), COUNTRY_NAME varchar(25), REGION_ID int);

Q(2):
CREATE TABLE IF NOT EXISTS countries (COUNTRY_ID varchar(4), COUNTRY_NAME varchar(25), REGION_ID int);

Q(3):
CREATE TABLE dup_countries LIKE countries;

Q(4):
CREATE TABLE IF NOT EXISTS dup_countries AS SELECT * FROM  countries;

Q(5):
CREATE TABLE IF NOT EXISTS countries (COUNTRY_ID varchar(4) NOT NULL, COUNTRY_NAME varchar(25) NOT NULL, REGION_ID int NOT NULL);

Q(6):
CREATE TABLE jobs (JOB_ID varchar(20), JOB_TITLE varchar(35), MIN_SALARY int, MAX_SALARY int CHECK(MAX_SALARY<=25000));

Q(7):
CREATE TABLE IF NOT EXISTS countries (COUNTRY_ID varchar(4), COUNTRY_NAME varchar(25) CHECK(COUNTRY_NAME IN('Italy','India','China')), REGION_ID int);

Q(8):
CREATE TABLE job_history (EMPLOYEE_ID int, START_DATE date, END_DATE date CHECK (END_DATE LIKE '--/--/----'), JOB_ID varchar(20), DEPARTMENT_ID int);

Q(9):
CREATE TABLE IF NOT EXISTS countries (COUNTRY_ID varchar(4), COUNTRY_NAME varchar(25), REGION_ID int, UNIQUE(COUNTRY_ID));

Q(10):
CREATE TABLE IF NOT EXISTS jobs (JOB_ID varchar(20) UNIQUE, JOB_TITLE varchar(35) DEFAULT ' ', MIN_SALARY int DEFAULT 8000, MAX_SALARY int DEFAULT NULL);

Q(11):
CREATE TABLE IF NOT EXISTS countries (COUNTRY_ID varchar(4) UNIQUE PRIMARY KEY, COUNTRY_NAME varchar(25),REGION_ID int);

Q(12):
CREATE TABLE IF NOT EXISTS countries (COUNTRY_ID int AUTO_INCREMENT PRIMARY KEY, COUNTRY_NAME varchar(25), REGION_ID int);

Q(13):
CREATE TABLE IF NOT EXISTS countries (COUNTRY_ID varchar(4), COUNTRY_NAME varchar(25), REGION_ID int, PRIMARY KEY (COUNTRY_ID,REGION_ID));

Q(14):
CREATE TABLE job_history (EMPLOYEE_ID int PRIMARY KEY, START_DATE date, END_DATE date, JOB_ID varchar(20), DEPARTMENT_ID int, FOREIGN KEY (job_id) REFERENCES jobs(job_id));

Q(15):
CREATE TABLE employees (EMPLOYEE_ID int PRIMARY KEY, FIRST_NAME varchar(20), LAST_NAME varchar(20), EMAIL varchar(30), PHONE_NUMBER varchar(15), HIRE_DATE date, JOB_ID varchar(20), SALARY int, COMMISSION_PCT int, MANAGER_ID int, DEPARTMENT_ID int, FOREIGN KEY(DEPARTMENT_ID, MANAGER_ID) REFERENCES departments(DEPARTMENT_ID, MANAGER_ID));

Q(16):
CREATE TABLE IF NOT EXISTS employees (EMPLOYEE_ID int PRIMARY KEY, FIRST_NAME varchar(20), LAST_NAME varchar(20), EMAIL varchar(30), PHONE_NUMBER varchar(15), HIRE_DATE date, JOB_ID varchar(20), SALARY int, COMMISSION_PCT int, MANAGER_ID int, DEPARTMENT_ID int, FOREIGN KEY(DEPARTMENT_ID) REFERENCES departments(DEPARTMENT_ID), FOREIGN KEY(JOB_ID) REFERENCES jobs(JOB_ID)ENGINE=InnoDB);

Q(17) && Q(18):
CREATE TABLE IF NOT EXISTS employees (EMPLOYEE_ID int PRIMARY KEY, FIRST_NAME varchar(20), LAST_NAME varchar(25), JOB_ID int, SALARY int, FOREIGN KEY(JOB_ID) REFERENCES jobs(JOB_ID) ON UPDATE CASCADE ON DELETE RESTRICT);


Q(19):
CREATE TABLE IF NOT EXISTS employees (EMPLOYEE_ID int PRIMARY KEY, FIRST_NAME varchar(20), LAST_NAME varchar(20), JOB_ID int, SALARY int, FOREIGN KEY(JOB_ID) REFERENCES jobs(JOB_ID) ON DELETE SET NULL ON UPDATE SET NULL)ENGINE=InnoDB;

Q(20):
CREATE TABLE IF NOT EXISTS employees (EMPLOYEE_ID int PRIMARY KEY, FIRST_NAME varchar(20), LAST_NAME varchar(20), JOB_ID int, SALARY int, FOREIGN KEY(JOB_ID) REFERENCES jobs(JOB_ID) ON DELETE NO ACTION ON UPDATE NO ACTION)ENGINE=InnoDB;